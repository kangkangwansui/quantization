import argparse

parser = argparse.ArgumentParser(description='PyTorch Cifar10 Training')
parser.add_argument('--epochs', default=300, type=int, metavar='N', help='number of total epochs to run')
parser.add_argument('-a', '--arch', metavar='ARCH', default='resnet20')
parser.add_argument('--start-epoch', default=0, type=int, metavar='N', help='manual epoch number (useful on restarts)')
parser.add_argument('--batch_size', default=128, type=int, metavar='N', help='mini-batch size (default: 128),only used for train')
parser.add_argument('--lr', '--learning-rate', default=0.1, type=float, metavar='LR', help='initial learning rate')
parser.add_argument('--momentum', default=0.9, type=float, metavar='M', help='momentum')
parser.add_argument('--weight-decay', '--wd', default=1e-4, type=float, metavar='W', help='weight decay (default: 1e-4)')
parser.add_argument('--print-freq', '-p', default=100, type=int, metavar='N', help='print frequency (default: 10)')
parser.add_argument('--resume', default='', type=str, metavar='PATH', help='path to latest checkpoint (default: none)')
parser.add_argument('--evaluate', default=False, type=bool, help='Whether or not to perform a validation operation')
parser.add_argument('-ct', '--cifar-type', default='10', type=int, metavar='CT', help='10 for cifar10,100 for cifar100 (default: 10)')
parser.add_argument('-id', '--device', default='0', type=str, help='gpu device')
parser.add_argument('--bit', default=4, type=int, help='the bit-width of the quantized network')
parser.add_argument('--seed', default=0, type=int, help='Choose a random seed')
parser.add_argument('--quant', default='clip_non', type=str, help='Select the quantization type')
parser.add_argument('--dataset', default='cifar10', type=str, help='Select a dataset type')
parser.add_argument('--data_root', default='/home/zhoukang/quantization_code/dataset/data_cifar10/', type=str, help='')
parser.add_argument('--csv_a', default='result/cifar10_csv_a/', type=str, help='csv_a保存的路径')
parser.add_argument('--csv', default='result/cifar10_csv/', type=str, help='csv保存的路径')
parser.add_argument('--log', default='result/cifar10_log/', type=str, help='log保存的路径')
parser.add_argument('--float', default=True, type=bool, help='')

args = parser.parse_args()